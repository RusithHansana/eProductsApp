package tech.eproducts.shopping_cart_service.model;

// Lombok annotations for automatic generation of boilerplate code
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.Id;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.mongodb.core.mapping.DBRef;
import org.springframework.data.mongodb.core.mapping.Document;
import tech.eproducts.shopping_cart_service.dto.ProductDTO;

import java.time.LocalDateTime;
import java.util.List;

/**
 * Represents a shopping cart entity in the system.
 * This class is mapped to the "shopping_carts" collection in MongoDB.
 */
@Document(collection = "shopping_carts") // Specifies the MongoDB collection name
@Data // Lombok annotation to generate getters, setters, and other utility methods
@AllArgsConstructor // Generates a constructor with all fields
@NoArgsConstructor // Generates a no-argument constructor
public class ShoppingCart {

    @Id // Marks this field as the primary key in the MongoDB document
    private String id; // Unique identifier for the shopping cart

//    @DBRef // Indicates that this field is a reference to another document (User)
//    private String user; // Reference to the User who owns the cart

    @DBRef // Indicates that this field is a reference to another document (ProductDTO)
    private List<ProductDTO> items; // List of products included in the shopping cart

    @CreatedDate // Automatically populated with the current date when the cart is created
    private LocalDateTime createdAt; // Timestamp for when the cart was created

    @LastModifiedDate // Automatically updated with the current date when the cart is modified
    private LocalDateTime updatedAt; // Timestamp for when the cart was last updated

    // Constructors, getters, and setters are generated by Lombok annotations
}